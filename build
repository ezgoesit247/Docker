#!/bin/bash

docker_dir=${HOME}/Docker
function msg {
  echo "  build::${1} says: ${2}"
}
function init { #
  for path in ~/Docker/root_docker/node_r_admin ~/Docker/root_docker/awsdev_r_admin ~/Docker/root_docker/terraform_r_admin ~/Docker/root_docker/kubernetes_r_admin ~/Docker/root_docker/docker_r_admin ~/Docker/root_docker/development_r_admin ~/Docker/root_docker/ubuntu_seed_r_admin ~/Docker/root_docker/ubuntu_seed_r_admin
  do pushd ${path} > /dev/null; done
}
function do_build {
   msg "do_build" "building docker tag ${1}"
   while ! docker build -t ${1} . > /dev/null; do
      if [ ! -f ./Dockerfile ] && [ -f ./Dockerfile.sh ]; then
         msg "${1}/Dockerfile.sh -> ${1}/Dockerfile" \
            && ln -s ./Dockerfile.sh ./Dockerfile \
            && msg "Retrying..." && continue
      fi
      msg "Error in ${1}, fix then press <Enter> to retry";
      read x; msg "Retrying ${1}";
   done
}
function build {
  tag=$1
  if [[ ${tag} == ubuntu_seed_r_admin ]];
    then do_build ${tag} \
      && tag=${tag}:20.04; do_build ${tag}
    else do_build ${tag}
  fi
}

# - main
#if [ -z ${1} ]; then build ${PWD##*/}
#   else if [ -d ${docker_dir}/${1} ]
#      then pushd ${docker_dir}/${1} > /dev/null
#      build ${1}
#      popd
#   fi
#fi
if [ -d ${docker_dir}/${1} ] && [ ! -z ${1} ]; then
  pushd ${docker_dir}/${1} > /dev/null
  build ${1}
  popd
  else build ${PWD##*/}
fi
