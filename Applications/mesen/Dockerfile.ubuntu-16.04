#!/bin/bash
### BUILT WITH dosetup
FROM local/ubuntu-appdev:16.04 as root
ARG gituser
ARG DOCKER_ENV=mesen
ARG CUSERHOME=/root
ARG LOCALUSER

ENV GIT_SSH=/root/bin/git-ssh
ARG ROOT_SAFE_PATH=\\/root
ARG GIT_CONFIG=/root/.gitconfig
ARG KNOWN_HOSTS=/root/.ssh/known_hosts
COPY assets.docker/git-ssh $GIT_SSH
COPY assets.docker/git-ssh $GIT_SSH
COPY assets.docker/.gitconfig $GIT_CONFIG
COPY assets.docker/known_hosts $KNOWN_HOSTS

ARG SSH_PRIVATE_KEY
ARG SSH_PRIVATE_KEY_STREAM
RUN echo "${SSH_PRIVATE_KEY_STREAM}" > /root/.ssh/$SSH_PRIVATE_KEY

RUN chmod 700 /root/.ssh && chmod 755 /root/bin && chmod 755 $GIT_SSH && chmod 600 $KNOWN_HOSTS && chmod 644 $GIT_CONFIG && sed -i 's/\/Users\/'$LOCALUSER'/'$ROOT_SAFE_PATH'/' $GIT_CONFIG && chmod 600 /root/.ssh/$SSH_PRIVATE_KEY

ENV DOCKER_ENV=$DOCKER_ENV
VOLUME /mesen
RUN git clone git@github.com:$gituser/mesen /mesen && ln -fsn /mesen $CUSERHOME/mesen && echo '### SHARED HISTORY ###\nif [ -d ${HOME}/public.assets/bash_history/ ]; then export HISTFILE="${HOME}/public.assets/bash_history/history.${DOCKER_ENV}"; fi && green "Shared bash history at:" && echo ${HISTFILE}\n'>>/root/.bashrc && apt-get -qq clean


FROM root as monodeps
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
&& sudo apt-get install -qq apt-transport-https ca-certificates \
&& echo "deb https://download.mono-project.com/repo/ubuntu stable-xenial main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list \
&& apt-get update

FROM monodeps as mono
RUN apt-get install -qq mono-devel

FROM mono as libsdl2
RUN apt-get install -qq libsdl2-dev



FROM libsdl2 as zip
RUN apt-get install -qq zip

FROM zip as update
RUN apt-get -qq update

FROM update as clang7
RUN apt-get install -qq clang-7 \
&& update-alternatives --install /usr/bin/clang clang /usr/bin/clang-7 7 \
&& update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-7 7

FROM clang7 as clang11
#RUN apt-get install -qq clang-11 \
#&& update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 11 \
#&& update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 11
#FROM builddeps as x11
#RUN apt-get install -y x11-apps && \
#rm -rf /tmp/* /usr/share/doc/* /usr/share/info/* /var/tmp/* && \
#mkdir -p /root/.config/mesen
#ENV DISPLAY :0

FROM clang11 as nx
# dpkg -i local.assets/nomachine_7.4.1_1_amd64.deb

FROM nx as runmesen
VOLUME /root/.config/mesen
RUN echo 'function buildmesen { LTO=true make ; }\n\
echo Run buildmesen\n\
'\
>>/root/.bashrc


FROM runmesen as clean
RUN apt-get -qq clean
